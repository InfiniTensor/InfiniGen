
#include <bang.h>

__mlu_func__ void ParallelTask_0(float *Data_0, float *Data_1, float *Data_3) {
  __nram__ char cache[20480];
  __ldram__ char cache_ldram[102400];
  __memcpy((float *)(cache + 0), Data_0 + 0 + taskId * 1024, 4096, GDRAM2NRAM);
  __memcpy((float *)(cache + 4096), Data_1 + 0 + taskId * 1024, 4096, GDRAM2NRAM);
  __bang_add((float *)(cache + 8192), (float *)(cache + 0), (float *)(cache + 4096), 1024);
  __bang_add((float *)(cache + 0), (float *)(cache + 4096), (float *)(cache + 8192), 1024);
  __memcpy(Data_3 + 0 + taskId * 1024, (float *)(cache + 0), 4096, NRAM2GDRAM);
}

__mlu_entry__ void Graph_0_kernel(float *Data_0, float *Data_1, float *Data_3) {
  ParallelTask_0(Data_0, Data_1, Data_3);
}

void Graph_0(cnrtQueue_t queue, float *Data_0, float *Data_1, float *Data_3) {
  cnrtDim3_t dim = {4, 1, 1};
  Graph_0_kernel<<<dim, CNRT_FUNC_TYPE_UNION1, queue>>>(Data_0, Data_1, Data_3);
}
